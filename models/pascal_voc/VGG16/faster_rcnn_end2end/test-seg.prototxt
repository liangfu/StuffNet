name: "VGG_ILSVRC_16_layers"

input: "data"
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}

input: "im_info"
input_shape {
  dim: 1
  dim: 3
}

layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}

#========= RPN ============

layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 512
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}

layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 18   # 2(bg/fg) * 9(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 36   # 4 * 9(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
   bottom: "rpn_cls_score"
   top: "rpn_cls_score_reshape"
   name: "rpn_cls_score_reshape"
   type: "Reshape"
   reshape_param { shape { dim: 0 dim: 2 dim: -1 dim: 0 } }
}

#========= RoI Proposal ============

layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: 'rpn_cls_prob_reshape'
  type: 'Reshape'
  bottom: 'rpn_cls_prob'
  top: 'rpn_cls_prob_reshape'
  reshape_param { shape { dim: 0 dim: 18 dim: -1 dim: 0 } }
}
layer {
  name: 'proposal'
  type: 'Python'
  bottom: 'rpn_cls_prob_reshape'
  bottom: 'rpn_bbox_pred'
  bottom: 'im_info'
  top: 'rois'
  python_param {
    module: 'rpn.proposal_layer'
    layer: 'ProposalLayer'
    param_str: "'feat_stride': 16"
  }
}

#========= RCNN ============

layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.0625 # 1/16
  }
}
##################################
# seg
##################################
layer {
  name: "pool4_seg"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4_seg"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "conv5_1_seg"
  type: "Convolution"
  bottom: "pool4_seg"
  top: "conv5_1_seg"
  convolution_param {
    num_output: 512
    pad: 2
    dilation: 2
    kernel_size: 3
  }
}
layer {
  name: "relu5_1_seg"
  type: "ReLU"
  bottom: "conv5_1_seg"
  top: "conv5_1_seg"
}
layer {
  name: "conv5_2_seg"
  type: "Convolution"
  bottom: "conv5_1_seg"
  top: "conv5_2_seg"
  convolution_param {
    num_output: 512
    pad: 2
    dilation: 2
    kernel_size: 3
  }
}
layer {
  name: "relu5_2_seg"
  type: "ReLU"
  bottom: "conv5_2_seg"
  top: "conv5_2_seg"
}
layer {
  name: "conv5_3_seg"
  type: "Convolution"
  bottom: "conv5_2_seg"
  top: "conv5_3_seg"
  convolution_param {
    num_output: 512
    pad: 2
    dilation: 2
    kernel_size: 3
  }
}
layer {
  name: "relu5_3_seg"
  type: "ReLU"
  bottom: "conv5_3_seg"
  top: "conv5_3_seg"
}
layer {
  name: "pool5_seg"
  type: "Pooling"
  bottom: "conv5_3_seg"
  top: "pool5_seg"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "roi_pool5_seg"
  type: "ROIPooling"
  bottom: "conv5_3_seg"
  bottom: "rois"
  top: "roi_pool5_seg"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.125 # 1/8
  }
}
layer {
  name: "fc6_seg"
  type: "Convolution"
  bottom: "pool5_seg"
  top: "fc6_seg"
  convolution_param {
    num_output: 1024
    kernel_size: 3
    dilation: 12
    pad: 12
  }
}
layer {
  name: "relu6_seg"
  type: "ReLU"
  bottom: "fc6_seg"
  top: "fc6_seg"
}
layer {
  name: "drop6_seg"
  type: "Dropout"
  bottom: "fc6_seg"
  top: "fc6_seg"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7_seg"
  type: "Convolution"
  bottom: "fc6_seg"
  top: "fc7_seg"
  convolution_param {
    num_output: 1024
    kernel_size: 1
  }
}
layer {
  name: "relu7_seg"
  type: "ReLU"
  bottom: "fc7_seg"
  top: "fc7_seg"
}
layer {
  name: "drop7_seg"
  type: "Dropout"
  bottom: "fc7_seg"
  top: "fc7_seg"
  dropout_param {
    dropout_ratio: 0.5
  }
}
###########
## parsenet
###########
layer {
  name: "fc7_seg_norm"
  type: "Normalize"
  bottom: "fc7_seg"
  top: "fc7_seg_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
    fix_scale: false
  }
}
layer {
  name: "pool7_seg"
  type: "Pooling"
  bottom: "fc7_seg"
  top: "pool7_seg"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}
layer {
  name: "pool7_seg_norm"
  type: "Normalize"
  bottom: "pool7_seg"
  top: "pool7_seg_norm"
  norm_param {
    scale_filler {
      type: "constant"
      value: 10
    }
    across_spatial: false
    channel_shared: false
    fix_scale: false
  }
}
layer {
  name: "pool7_seg_norm_drop"
  type: "Dropout"
  bottom: "pool7_seg_norm"
  top: "pool7_seg_norm"
  dropout_param {
    dropout_ratio: 0.3
  }
}
layer {
  name: "fc8_seg"
  type: "Convolution"
  bottom: "fc7_seg_norm"
  top: "fc8_seg"
  convolution_param {
    # number of output classes
    num_output: 30
    kernel_size: 1
  }
}
layer {
  name: "fc8_seg_1x1"
  type: "Convolution"
  bottom: "pool7_seg_norm"
  top: "fc8_seg_1x1"
  convolution_param {
    # number of output classes
    num_output: 30
    kernel_size: 1
  }
}
layer {
  name: "fc8_seg_1x1_unpool"
  type: "UnPooling"
  bottom: "fc8_seg_1x1"
  bottom: "fc8_seg"
  top: "fc8_seg_1x1_unpool"
  unpooling_param {
    unpool: REP
    out_kernel_size: 0
    out_stride: 0
  }
}
layer {
  name: "fc8_seg_combine"
  type: "Eltwise"
  bottom: "fc8_seg_1x1_unpool"
  bottom: "fc8_seg"
  top: "fc8_seg_combine"
  eltwise_param {
    operation: SUM
  }
}
layer {
  name: "fc8_seg_interp"
  type: "Interp"
  bottom: "fc8_seg_combine"
  bottom: "data"
  top: "fc8_seg_interp"
}

##################################
# fc
##################################
layer {
  name: "eltwise"
  type: "Eltwise"
  bottom: "pool5"
  bottom: "roi_pool5_seg"
  top: "pool5_combined"
  eltwise_param {
    operation: SUM
    coeff: 0.5
    coeff: 0.5
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5_combined"
  top: "fc6"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  inner_product_param {
    num_output: 84
  }
}


######### PRED ###################
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  inner_product_param {
    num_output: 21
  }
}
layer {
  name: "cls_prob"
  type: "Softmax"
  bottom: "cls_score"
  top: "cls_prob"
}

layer {
  name: "prob_seg"
  type: "Softmax"
  bottom: "fc8_seg_interp"
  top: "prob_seg"
}
